Object subclass: #AlgoViajes	instanceVariableNames: 'registro posibleCriterio'	classVariableNames: ''	package: 'TP1'!!AlgoViajes methodsFor: 'initialization' stamp: 'Nicolas 4/16/2023 12:51'!initialize	posibleCriterio := Dictionary new.	posibleCriterio		at: 'Minimo' put: CriterioMin new;		at: 'Maximo' put: CriterioMax new! !!AlgoViajes methodsFor: 'not defined category' stamp: 'Nicolas 4/15/2023 21:21'!viajeSegunCriterio: unCriterio	[ posibleCriterio at: unCriterio ]		on: KeyNotFound		do: [ CriterioNoEncontradoException signal: 'Criterio no encontrado' ].	^ posibleCriterio at: unCriterio! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoViajes class	instanceVariableNames: ''!!AlgoViajes class methodsFor: 'not defined category' stamp: 'Nicolas 4/13/2023 10:06'!ConCriterio: unCriterio	| algoViajes |	algoViajes := self new.	^ algoViajes viajeSegunCriterio: unCriterio 	! !Class subclass: #CiudadEsperada	instanceVariableNames: 'nombre pais'	classVariableNames: ''	package: 'TP1'!!CiudadEsperada methodsFor: 'accessing' stamp: 'Nicolas 4/6/2023 22:59'!nombre	^ nombre! !!CiudadEsperada methodsFor: 'comparing' stamp: 'JG 4/5/2023 11:28'!= other	^nombre = (other nombre).! !!CiudadEsperada methodsFor: 'as yet unclassified' stamp: 'AV 4/5/2023 11:22'!establecerPais: unPais	pais := unPais.! !!CiudadEsperada methodsFor: 'as yet unclassified' stamp: 'AV 4/5/2023 11:21'!establecerNombre: unNombre	nombre := unNombre.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CiudadEsperada class	instanceVariableNames: ''!!CiudadEsperada class methodsFor: 'not defined category' stamp: 'Nicolas 4/16/2023 14:44'!nombre: unNombre en: unPais	"+ de una forma de inicializar objetos ergo sobrecarga de constructores"	| ciudadEsperada |	ciudadEsperada := self new.	ciudadEsperada establecerNombre: unNombre.	ciudadEsperada establecerPais: unPais.	^ ciudadEsperada! !Object subclass: #CriterioMax	instanceVariableNames: 'registro kmsRequeridos'	classVariableNames: ''	package: 'TP1'!!CriterioMax methodsFor: 'not defined category' stamp: 'Nicolas 4/16/2023 12:54'!viajeIndicadoSegunCriterioPara: unNombre	| pasajes |	[registro at: unNombre]		on: KeyNotFound		do: [ PersonaNoEncontradaException signal: 'Persona inexistente.' ].	^ ((pasajes := registro at: unNombre) detectMax: [ :p | p tarifa ])! !!CriterioMax methodsFor: 'not defined category' stamp: 'Nicolas 4/15/2023 21:24'!registrarPasajePara: unNombre deNacionalidad: unaNacionalidad conDestinoACiudad: unaCiudadDestino delPais: unPaisDestino aKms: unosKms	| persona pasaje |		unosKms < kmsRequeridos ifTrue: [ KmsInsuficientesException signal: 'Kilometros insuficientes.' ].		(registro includesKey: unNombre) ifFalse: [ 		registro at: unNombre put: OrderedCollection new ].	pasaje := Pasaje		          Nacionalidad: unaNacionalidad		          Destino: unaCiudadDestino		          Pais: unPaisDestino		          Kms: unosKms.	(persona := registro at: unNombre) add: pasaje! !!CriterioMax methodsFor: 'initialization' stamp: 'Nicolas 4/19/2023 10:58'!initialize	registro := Dictionary new.	kmsRequeridos := 1172! !Object subclass: #CriterioMin	instanceVariableNames: 'registro kmsRequeridos'	classVariableNames: ''	package: 'TP1'!!CriterioMin methodsFor: 'not defined category' stamp: 'Nicolas 4/16/2023 12:54'!viajeIndicadoSegunCriterioPara: unNombre	| pasajes |	[ registro at: unNombre ]		on: KeyNotFound		do: [ PersonaNoEncontradaException signal: 'Persona inexistente.' ].		^ ((pasajes := registro at: unNombre) detectMin: [ :p | p tarifa ]) ! !!CriterioMin methodsFor: 'not defined category' stamp: 'Nicolas 4/15/2023 21:24'!registrarPasajePara: unNombre deNacionalidad: unaNacionalidad conDestinoACiudad: unaCiudadDestino delPais: unPaisDestino aKms: unosKms	| persona pasaje |		unosKms < kmsRequeridos ifTrue: [ KmsInsuficientesException signal: 'Kilometros insuficientes.' ].		(registro includesKey: unNombre) ifFalse: [ 		registro at: unNombre put: OrderedCollection new ].	pasaje := Pasaje		          Nacionalidad: unaNacionalidad		          Destino: unaCiudadDestino		          Pais: unPaisDestino		          Kms: unosKms.	(persona := registro at: unNombre) add: pasaje! !!CriterioMin methodsFor: 'initialization' stamp: 'Nicolas 4/19/2023 10:58'!initialize	registro := Dictionary new.	kmsRequeridos := 1172! !Error subclass: #CriterioNoEncontradoException	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #DestinoNoEncontradoException	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Extranjero	instanceVariableNames: 'esExtranjero'	classVariableNames: ''	package: 'TP1'!!Extranjero methodsFor: 'accessing' stamp: 'Nicolas 4/15/2023 21:23'!esExtranjero: unaNacionalidad	[ esExtranjero at: unaNacionalidad ]		on: KeyNotFound		do: [ NacionalidadNoEncontradaException signal: 'Nacionalidad inexistente.' ].	^ esExtranjero at: unaNacionalidad! !!Extranjero methodsFor: 'initialization' stamp: 'Nicolas 4/15/2023 09:18'!initialize	esExtranjero := Dictionary new.	esExtranjero		at: 'Argentina' put: 'noExtranjero';		at: 'Italiana' put: 'extranjero';		at: 'Española' put: 'extranjero';		at: 'Peruana' put: 'extranjero';		at: 'Portuguez' put: 'extranjero';		at: 'Alemana' put: 'extranjero';		at: 'Uruguaya' put: 'extranjero'! !Object subclass: #Internacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Internacional methodsFor: 'not defined category' stamp: 'Nicolas 4/14/2023 11:10'!Kms: tarifaKms^ tarifaKms log + 3600 * 1.2! !Object subclass: #InternacionalExtranjero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!InternacionalExtranjero methodsFor: 'not defined category' stamp: 'Nicolas 4/14/2023 11:11'!Kms: tarifaKms	^tarifaKms log + 3600 raisedTo: 1.2.! !Error subclass: #KmsInsuficientesException	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Mercosur	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Mercosur methodsFor: 'not defined category' stamp: 'Nicolas 4/14/2023 11:12'!Kms: tarifaKms	^ (tarifaKms raisedTo: 1.12) * 1.2! !Object subclass: #MercosurExtranjero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!MercosurExtranjero methodsFor: 'not defined category' stamp: 'Nicolas 4/14/2023 11:13'!Kms: tarifaKms	^ (tarifaKms raisedTo: 1.12) raisedTo: 1.2.! !Object subclass: #Nacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Nacional methodsFor: 'not defined category' stamp: 'Nicolas 4/14/2023 11:14'!Kms: tarifaKms^ (tarifaKms * 1.28) sqrt * 1.2.! !Object subclass: #NacionalExtranjero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!NacionalExtranjero methodsFor: 'not defined category' stamp: 'Nicolas 4/14/2023 22:21'!Kms: tarifaKms	^ tarifaKms * 1.28 - 1500 raisedTo: 1.2! !Error subclass: #NacionalidadNoEncontradaException	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Pasaje	instanceVariableNames: 'nacionalidad ciudadDestino paisDestino kms tarifa costo'	classVariableNames: ''	package: 'TP1'!!Pasaje methodsFor: 'as yet unclassified' stamp: 'Nicolas 4/12/2023 10:08'!establecerPaisDestino: unPaisDestino	paisDestino := unPaisDestino.! !!Pasaje methodsFor: 'as yet unclassified' stamp: 'Nicolas 4/11/2023 00:04'!establecerNacionalidad: unaNacionalidad	nacionalidad := unaNacionalidad ! !!Pasaje methodsFor: 'as yet unclassified' stamp: 'Nicolas 4/11/2023 00:05'!establecerCiudadDestino: unaCiudadDestino	ciudadDestino := unaCiudadDestino ! !!Pasaje methodsFor: 'as yet unclassified' stamp: 'Nicolas 4/11/2023 00:06'!establecerKms: unosKms	kms := unosKms ! !!Pasaje methodsFor: 'initialization' stamp: 'Nicolas 4/14/2023 13:24'!initialize		tarifa := Tarifa new! !!Pasaje methodsFor: 'not defined category' stamp: 'Nicolas 4/12/2023 22:58'!tarifa	tarifa dadaNacionalidad: nacionalidad dadoPaisDestino: paisDestino  dadosKms: kms.	^ tarifa establecerCosto! !!Pasaje methodsFor: 'not defined category' stamp: 'Nicolas 4/15/2023 21:28'!destino	^ CiudadEsperada nombre: ciudadDestino en: paisDestino  ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pasaje class	instanceVariableNames: ''!!Pasaje class methodsFor: 'not defined category' stamp: 'Nicolas 4/14/2023 12:05'!Nacionalidad: unaNacionalidad Destino: unaCiudadDestino Pais: unPaisDestino Kms: unosKms	| pasaje |	pasaje := self new.	pasaje establecerNacionalidad: unaNacionalidad.	pasaje establecerCiudadDestino: unaCiudadDestino.	pasaje establecerPaisDestino: unPaisDestino.	pasaje establecerKms: unosKms.	^ pasaje! !Error subclass: #PersonaNoEncontradaException	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Tarifa	instanceVariableNames: 'personaNacionalidad paisDestino posiblesDestinos paisesPertenecientes tarifaKms esExtranjero'	classVariableNames: ''	package: 'TP1'!!Tarifa methodsFor: 'not defined category' stamp: 'Nicolas 4/15/2023 22:06'!establecerCosto	| destino |	paisesPertenecientes keysAndValuesDo: [ :key :value | 		(value includes: paisDestino) ifTrue: [ destino := key ] ].	[ posiblesDestinos at: destino ]		on: KeyNotFound		do: [ DestinoNoEncontradoException signal: 'Pais destino inexistente.' ].	^ ((posiblesDestinos at: destino) at:		   (esExtranjero esExtranjero: personaNacionalidad)) Kms: tarifaKms! !!Tarifa methodsFor: 'initialization' stamp: 'Nicolas 4/15/2023 09:28'!initialize	| nacional internacional mercosur |	paisesPertenecientes := Dictionary new.	posiblesDestinos := Dictionary new.	paisesPertenecientes		at: 'Nacional' put: #( 'Argentina' );		at: 'Internacional' put: #( 'Portugal' 'España' 'Alemania' 'Italia');		at: 'Mercosur' put: #( 'Peru' 'Uruguay' ).	nacional := Dictionary new.	internacional := Dictionary new.	mercosur := Dictionary new.	nacional		at: 'extranjero' put: NacionalExtranjero new;		at: 'noExtranjero' put: Nacional new.	internacional		at: 'extranjero' put: InternacionalExtranjero new;		at: 'noExtranjero' put: Internacional new.	mercosur		at: 'extranjero' put: MercosurExtranjero new;		at: 'noExtranjero' put: Mercosur new.	posiblesDestinos		at: 'Nacional' put: nacional;		at: 'Internacional' put: internacional;		at: 'Mercosur' put: mercosur! !!Tarifa methodsFor: 'as yet unclassified' stamp: 'Nicolas 4/14/2023 12:59'!dadaNacionalidad: unaNacionalidad dadoPaisDestino: unPaisDestino dadosKms: kms	personaNacionalidad := unaNacionalidad.	paisDestino := unPaisDestino.	tarifaKms := kms.	esExtranjero := Extranjero new! !